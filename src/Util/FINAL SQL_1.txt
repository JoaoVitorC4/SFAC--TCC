-- Database: TCC

-- DROP DATABASE "TCC";

CREATE DATABASE "TCC"
    WITH 
    OWNER = postgres
    ENCODING = 'UTF8'
    LC_COLLATE = 'Portuguese_Brazil.1252'
    LC_CTYPE = 'Portuguese_Brazil.1252'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1;
	
	
	CREATE TABLE STATUS(
	COD_STATUS SERIAL PRIMARY KEY, 
	NOME_STATUS VARCHAR UNIQUE NOT NULL,
	LIBERA_ACESSO BOOLEAN NOT NULL
	);

	INSERT INTO STATUS (cod_status,nome_status,libera_acesso) values(1,'LIBERADO',true);
	INSERT INTO STATUS (cod_status,nome_status,libera_acesso) values(2,'BLOQUEADO',false);
	
	CREATE TABLE GRUPO(
	COD_GRUPO SERIAL PRIMARY KEY,
	NOME_GRUPO VARCHAR NOT NULL UNIQUE
	);

	INSERT INTO GRUPO(cod_grupo,nome_grupo) values(1,'TITULARES');
	INSERT INTO GRUPO(cod_grupo,nome_grupo) values(2,'DEPENDENTES');
	INSERT INTO GRUPO(cod_grupo,nome_grupo) values(3,'FUNCIONARIOS');

	CREATE TABLE FORMADEPAGAMENTO(
	COD_FPAGAMENTO SERIAL PRIMARY KEY,
	NOME_FPAGAMENTO VARCHAR NOT NULL UNIQUE,
	TAXA_FPAGAMENTO FLOAT	
	);

	INSERT INTO FORMADEPAGAMENTO(cod_fpagamento,nome_fpagamento,taxa_fpagamento) values(1,'DINHEIRO',0);

	INSERT INTO FORMADEPAGAMENTO(cod_fpagamento,nome_fpagamento,taxa_fpagamento) values(2,'CARTAO DE DEBITO',0);


	INSERT INTO FORMADEPAGAMENTO(cod_fpagamento,nome_fpagamento,taxa_fpagamento) values(3,'CARTAO DE CREDITO',0);


	INSERT INTO FORMADEPAGAMENTO(cod_fpagamento,nome_fpagamento,taxa_fpagamento) values(4,'PIX',0);
	
	CREATE TABLE PLANO(
	COD_PLANO SERIAL PRIMARY KEY,
	NOME_PLANO VARCHAR NOT NULL UNIQUE,
	VALOR_PLANO FLOAT NOT NULL,
	QTD_DEPENDENTE INTEGER,
	QTD_CONVIDADO INTEGER
	);
	

	CREATE TABLE UF(
	COD_UF SERIAL PRIMARY KEY,
	NOME_ESTADO VARCHAR(200) NOT NULL,
	SIGLA_UF VARCHAR(2) NOT NULL
	);

	CREATE TABLE CIDADE(
	COD_CIDADE SERIAL PRIMARY KEY,
	NOME_CIDADE VARCHAR(200) NOT NULL,
	CIDADE_UF INTEGER REFERENCES UF(COD_UF)
	);

	CREATE TABLE CEP(
	COD_CEP SERIAL PRIMARY KEY,
	NUMERO_CEP VARCHAR(8) NOT NULL UNIQUE,
	CEP_CIDADE INTEGER REFERENCES CIDADE(COD_CIDADE)
	);
	
	CREATE TABLE PERFIL(
	COD_PERFIL SERIAL PRIMARY KEY,
	NOME_PERFIL VARCHAR NOT NULL
	);
	
INSERT INTO PERFIL(cod_perfil,nome_perfil) values(1,'ADMINISTRACAO');

INSERT INTO PERFIL(cod_perfil,nome_perfil) values(2,'OPERACIONAL');
	

	CREATE TABLE USUARIO(
	COD_USUARIO SERIAL PRIMARY KEY,
	NOME_USUARIO VARCHAR(200) NOT NULL UNIQUE,
	SENHA_USUARIO VARCHAR(200) NOT NULL,
	USUARIO_PERFIL INTEGER REFERENCES PERFIL(COD_PERFIL)
	);
	
	INSERT INTO USUARIO(cod_usuario,nome_usuario,senha_usuario,usuario_perfil) values
	(1,'master','master',1);

	CREATE TABLE PESSOA(
    	COD_PESSOA SERIAL PRIMARY KEY,
    	NOME_PESSOA VARCHAR NOT NULL,
    	ENDERECO_PESSOA VARCHAR NOT NULL,
    	BAIRRO_PESSOA VARCHAR NOT NULL,
    	NUMERO_PESSOA VARCHAR(10) NOT NULL,
	CIDADE_PESSOA INTEGER REFERENCES CIDADE(COD_CIDADE),
    	CEP_PESSOA CHAR(9),
    	TELEFONE_PESSOA VARCHAR(15) NOT NULL,
    	CPF_PESSOA VARCHAR(14) NOT NULL UNIQUE,
    	GRUPO_PESSOA INTEGER REFERENCES GRUPO(COD_GRUPO),
    	BIOMETRIA_PESSOA BYTEA,
    	USUARIO_PESSOA INTEGER REFERENCES USUARIO(COD_USUARIO)
    	);
	
	CREATE TABLE PACOTE(
	COD_PACOTE SERIAL PRIMARY KEY,
	PESSOA_PACOTE INTEGER REFERENCES  PESSOA(COD_PESSOA),
	PLANO_PACOTE INTEGER REFERENCES PLANO(COD_PLANO),
	GRUPO_PACOTE INTEGER REFERENCES GRUPO(COD_GRUPO),
	VENCIMENTO_PACOTE DATE,
	IDENTIFICACAO_PACOTE INTEGER NOT NULL
	);
	
	CREATE TABLE ENTRADA(
    	COD_ENTRADA SERIAL PRIMARY KEY,
    	DATAEHOTA_ENTRADA TIMESTAMP NOT NULL,
    	PESSOA_ENTRADA INTEGER REFERENCES PESSOA(COD_PESSOA)
    	);
    	
    	CREATE TABLE SAIDA(
	COD_SAIDA SERIAL PRIMARY KEY,
	DATAEHORA_SAIDA TIMESTAMP NOT NULL,
	SAIDA_ENTRADA INTEGER REFERENCES ENTRADA(COD_ENTRADA)
	);


	CREATE TABLE MENSALIDADE(
	COD_MENSALIDADE SERIAL PRIMARY KEY,
	EMISSAO_MENSALIDADE DATE NOT NULL,
	VENCIMENTO_MENSALIDADE DATE NOT NULL,
	VALOR_MENSALIDADE FLOAT NOT NULL,
        PAGAMENTO_MENSALIDADE DATE,
	VALOR_PAGO_MENSALIDADE FLOAT,
	JUROS_MENSALIDADE FLOAT,
	DESCONTO_MENSALIDADE FLOAT,
MENSALIDADE_FORMADEPAGAMENTO INTEGER REFERENCES FORMADEPAGAMENTO(COD_FPAGAMENTO),
	MENSALIDADE_STATUS INTEGER REFERENCES STATUS(COD_STATUS),
	MENSALIDADE_PLANO INTEGER REFERENCES PLANO(COD_PLANO),
MENSALIDADE_IDENTIFICACAO INTEGER NOT NULL	
	);


	
	create view identificacao_mensalidade as
	select
	a.cod_pacote,a.identificacao_pacote,p.nome_pessoa,l.nome_plano,g.nome_grupo,a.vencimento_pacote from pacote a 
	inner join pessoa p on p.cod_pessoa = a.pessoa_pacote
	inner join plano l on l.cod_plano = a.plano_pacote
	inner join plano n on n.cod_plano = a.plano_pacote
	inner join grupo g on g.cod_grupo = a.grupo_pacote

        create view mensalidade_view as
    select 
    m.cod_mensalidade, m.mensalidade_identificacao,m.emissao_mensalidade,
    m.vencimento_mensalidade,m.valor_mensalidade,m.valor_pago_mensalidade,m.juros_mensalidade,
    m.desconto_mensalidade,f.nome_fpagamento,s.nome_status,p.nome_plano from mensalidade m
    inner join formadepagamento f on m.mensalidade_formadepagamento = f.cod_fpagamento
    inner join status s on m.mensalidade_status = s.cod_status
    inner join plano p on m.mensalidade_plano = p.cod_plano
