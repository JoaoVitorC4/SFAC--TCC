/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VIEW;


import CTR.FormadePagamentoCTR;
import CTR.GrupoCTR;
import CTR.PerfilCTR;
import CTR.MensalidadeCTR;
import CTR.PessoaCTR;
import CTR.PlanoCTR;
import CTR.StatusCTR;
import MODEL.FormadePagamentoMODEL;
import MODEL.GrupoMODEL;
import MODEL.PerfilMODEL;
import MODEL.MensalidadeMODEL;
import MODEL.PessoaMODEL;
import MODEL.PlanoMODEL;
import MODEL.StatusMODEL;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.Insets;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aquin
 */
public class Psq_MensalidadeVIEW extends javax.swing.JFrame {
    List<FormadePagamentoMODEL> listFormadepagamento = null;
    List<PlanoMODEL> listPlano = null;
    List<StatusMODEL> listStatus = null;
    ResultSet rsmensalidade;
    MensalidadeVIEW objmensalidade = new MensalidadeVIEW();
    FormadePagamentoCTR objformadepagamento = new FormadePagamentoCTR();
    PlanoCTR objplano = new PlanoCTR();
    StatusCTR objstatus = new StatusCTR();
    List<PerfilMODEL> listPerfil;
    PerfilCTR objperfil = new PerfilCTR();


    public Psq_MensalidadeVIEW() {
        initComponents();
        this.setIconImage(new javax.swing.ImageIcon(getClass().getResource("/icones/LOGO SFAC.png")).getImage());
        pesquisarMensalidade();
        CoresdosBotoes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The mensalidadeent of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtPesquisar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMensalidade = new javax.swing.JTable();
        btnPesquisar = new javax.swing.JButton();
        btnDeletar = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pacote");

        jLabel1.setText("Pesquisar :");

        txtPesquisar.setBorder(new RoundedBorder(2));
        txtPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPesquisarActionPerformed(evt);
            }
        });

        tblMensalidade.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblMensalidade.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMensalidadeMouseClicked(evt);
            }
        });
        tblMensalidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblMensalidadeKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblMensalidade);

        btnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/pesquisa.png"))); // NOI18N
        btnPesquisar.setBorder(new RoundedBorder(7));
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        btnDeletar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/deletar.png"))); // NOI18N
        btnDeletar.setText("Deletar");
        btnDeletar.setBorder(new RoundedBorder(7));
        btnDeletar.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        btnDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarActionPerformed(evt);
            }
        });

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/adicionar.png"))); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.setBorder(new RoundedBorder(7));
        btnNovo.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/editar.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setBorder(new RoundedBorder(7));
        btnEditar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 670, Short.MAX_VALUE)
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnDeletar, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                            .addComponent(btnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(745, Short.MAX_VALUE)
                    .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(8, 8, 8)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(22, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(btnDeletar, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(65, 65, 65)
                    .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(232, Short.MAX_VALUE)))
        );

        getAccessibleContext().setAccessibleDescription("Pacote");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPesquisarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesquisarActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
       pesquisarMensalidade();
       
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void tblMensalidadeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMensalidadeMouseClicked
        if(evt.getClickCount() == 2)
        {
        objmensalidade.opcao = "Alterar";
        int linha = tblMensalidade.getSelectedRow();

        objmensalidade.cod_mensalidade = (int) tblMensalidade.getValueAt(linha, 0);
        objmensalidade.txtEmissao_mensalidade.setDate((Date)tblMensalidade.getValueAt(linha, 1));
        objmensalidade.txtVencimento_mensalidade.setDate((Date)tblMensalidade.getValueAt(linha, 2));  
        objmensalidade.txtValor_mensalidade.setText((String)tblMensalidade.getValueAt(linha, 3));
        objmensalidade.txtValor_pago_mensalidade.setText((String)tblMensalidade.getValueAt(linha, 4));
        objmensalidade.txtJuros_mensalidade.setText((String)tblMensalidade.getValueAt(linha, 5));
        objmensalidade.txtDesconto_mensalidade.setText((String)tblMensalidade.getValueAt(linha, 6));
        objmensalidade.itemformadepagamento = (int) tblMensalidade.getValueAt(linha, 7);
        objmensalidade.itemstatus = (int) tblMensalidade.getValueAt(linha, 8);
        objmensalidade.itemplano = (int) tblMensalidade.getValueAt(linha, 9);       
        
        listFormadepagamento = objformadepagamento.PegarFormadePagamentoBD
        ((int) tblMensalidade.getValueAt(linha, 7));
            
        objmensalidade.cmbFormadepagamento_mensalidade.setSelectedItem
            (listFormadepagamento.get(0).getNome_formadepagamento());
        
        
        
        listStatus = objstatus.pegarStatusBD
        ((int) tblMensalidade.getValueAt(linha, 8));
            
        objmensalidade.cmbStatus_Mensalidade.setSelectedItem
            (listStatus.get(0).getNome_status());
            
        
        
        
        listPlano = objplano.PegarPlanoBD
        ((int) tblMensalidade.getValueAt(linha, 9));
            
        objmensalidade.cmbPlano_mensalidade.setSelectedItem
            (listPlano.get(0).getNome_plano());
        
        
        

        objmensalidade.setVisible(true);
            this.dispose();
        }
        
        
    }//GEN-LAST:event_tblMensalidadeMouseClicked

    private void tblMensalidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblMensalidadeKeyPressed
                objmensalidade.opcao = "Alterar";
        int linha = tblMensalidade.getSelectedRow();

        objmensalidade.cod_mensalidade = (int) tblMensalidade.getValueAt(linha, 0);
        objmensalidade.txtEmissao_mensalidade.setDate((Date)tblMensalidade.getValueAt(linha, 1));
        objmensalidade.txtVencimento_mensalidade.setDate((Date)tblMensalidade.getValueAt(linha, 2));  
        objmensalidade.txtValor_mensalidade.setText((String)tblMensalidade.getValueAt(linha, 3));
        objmensalidade.txtValor_pago_mensalidade.setText((String)tblMensalidade.getValueAt(linha, 4));
        objmensalidade.txtJuros_mensalidade.setText((String)tblMensalidade.getValueAt(linha, 5));
        objmensalidade.txtDesconto_mensalidade.setText((String)tblMensalidade.getValueAt(linha, 6));
        objmensalidade.itemformadepagamento = (int) tblMensalidade.getValueAt(linha, 7);
        objmensalidade.itemstatus = (int) tblMensalidade.getValueAt(linha, 8);
        objmensalidade.itemplano = (int) tblMensalidade.getValueAt(linha, 9);       
        
        listFormadepagamento = objformadepagamento.PegarFormadePagamentoBD
        ((int) tblMensalidade.getValueAt(linha, 7));
            
        objmensalidade.cmbFormadepagamento_mensalidade.setSelectedItem
            (listFormadepagamento.get(0).getNome_formadepagamento());
        
        
        
        listStatus = objstatus.pegarStatusBD
        ((int) tblMensalidade.getValueAt(linha, 8));
            
        objmensalidade.cmbStatus_Mensalidade.setSelectedItem
            (listStatus.get(0).getNome_status());
            
        
        
        
        listPlano = objplano.PegarPlanoBD
        ((int) tblMensalidade.getValueAt(linha, 9));
            
        objmensalidade.cmbPlano_mensalidade.setSelectedItem
            (listPlano.get(0).getNome_plano());
        
        
        

        objmensalidade.setVisible(true);
            this.dispose();
    }//GEN-LAST:event_tblMensalidadeKeyPressed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        
        MensalidadeVIEW objtelamensalidade = new MensalidadeVIEW();
        
        objtelamensalidade.opcao = "Inserir";
        
        objtelamensalidade.setVisible(true);
            this.dispose();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        objmensalidade.opcao = "Alterar";
        float valor_mensalidade = 0;
        float valor_pago_mensalidade = 0;
        float juros_mensalidade = 0;
        float desconto_mensalidade = 0;
        
        
        int linha = tblMensalidade.getSelectedRow();

        objmensalidade.cod_mensalidade = (int) tblMensalidade.getValueAt(linha, 0);
        objmensalidade.txtEmissao_mensalidade.setDate((Date)tblMensalidade.getValueAt(linha, 1));
        objmensalidade.txtVencimento_mensalidade.setDate((Date)tblMensalidade.getValueAt(linha, 2)); 
            //Enviar valor para o txt da tela de edição quando for do tipo float 
            valor_mensalidade = (Float)(tblMensalidade.getValueAt(linha, 3));            
            objmensalidade.txtValor_mensalidade.setText((String)Float.toString(valor_mensalidade));
                valor_pago_mensalidade = (Float)(tblMensalidade.getValueAt(linha, 4));            
                objmensalidade.txtValor_pago_mensalidade.setText((String)Float.toString(valor_pago_mensalidade));
                    juros_mensalidade = (Float)(tblMensalidade.getValueAt(linha, 5));            
                    objmensalidade.txtJuros_mensalidade.setText((String)Float.toString(juros_mensalidade));
                        desconto_mensalidade = (Float)(tblMensalidade.getValueAt(linha, 6));            
                        objmensalidade.txtDesconto_mensalidade.setText((String)Float.toString(desconto_mensalidade));
                        
                        
        objmensalidade.itemformadepagamento = (int) tblMensalidade.getValueAt(linha, 7);
        objmensalidade.itemstatus = (int) tblMensalidade.getValueAt(linha, 8);
        objmensalidade.itemplano = (int) tblMensalidade.getValueAt(linha, 9);       
        
        listFormadepagamento = objformadepagamento.PegarFormadePagamentoBD
        ((int) tblMensalidade.getValueAt(linha, 7));
            
        objmensalidade.cmbFormadepagamento_mensalidade.setSelectedItem
            (listFormadepagamento.get(0).getNome_formadepagamento());
        
        
        
        listStatus = objstatus.pegarStatusBD
        ((int) tblMensalidade.getValueAt(linha, 8));
            
        objmensalidade.cmbStatus_Mensalidade.setSelectedItem
            (listStatus.get(0).getNome_status());
            
        
        
        
        listPlano = objplano.PegarPlanoBD
        ((int) tblMensalidade.getValueAt(linha, 9));
            
        objmensalidade.cmbPlano_mensalidade.setSelectedItem
            (listPlano.get(0).getNome_plano());
        
        
        

        objmensalidade.setVisible(true);
            this.dispose();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarActionPerformed
    String [] options = new String[] {"Sim","Não"};
        
        Object ret = JOptionPane.showOptionDialog
    (null, "Tem certeza que deseja excluir: " 
            +objmensalidade.txtCod_mensalidade.getText() + "?","AVISO", JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
        
        if(options[Integer.valueOf(ret.toString())].equals("Sim"))
        {
            ExcluirMensalidade();
            pesquisarMensalidade();
        }
    }//GEN-LAST:event_btnDeletarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Psq_MensalidadeVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Psq_MensalidadeVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Psq_MensalidadeVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Psq_MensalidadeVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Psq_MensalidadeVIEW().setVisible(true);
            }
        });
    }
       
        public void CoresdosBotoes(){
        Color cornovo = new Color(192, 255, 206);
        Color coreditar = new Color(251, 246, 138);
        Color cordeletar = new Color(251, 138, 138);
        btnNovo.setBackground(cornovo);
        btnEditar.setBackground(coreditar);
        btnDeletar.setBackground(cordeletar);
        }
        public void pesquisarMensalidade(){
        
            MensalidadeCTR objmensalidade = new MensalidadeCTR();
            rsmensalidade = objmensalidade.PesquisarMENSALIDADECTR(txtPesquisar.getText());
        
            preenche_conmensalidade();
        
        }
    
    
    public void preenche_conmensalidade(){
        
        String [] colunas = {"Código" ,"Emissão","Vencimento","Valor","Valor pago",
        "Juros", "Desconto","Forma de Pagamento", "Status","Plano"} ;
        String [][] linhas = {};
        
            DefaultTableModel tablemodel = new DefaultTableModel(linhas,colunas)
        {
            public boolean CelulaEditavel(int rowIndex, int mColIndex)
            {
                return false;
            }
        };
    
            Vector < Vector> dados = new Vector();
    
        try {
            while (rsmensalidade.next())
            {
               Vector regVetor = new Vector();
               
                regVetor.add(rsmensalidade.getInt("cod_mensalidade"));
                regVetor.add(rsmensalidade.getDate("emissao_mensalidade"));             
                regVetor.add(rsmensalidade.getDate("vencimento_mensalidade"));             
                regVetor.add(rsmensalidade.getFloat("valor_mensalidade"));             
                regVetor.add(rsmensalidade.getFloat("valor_pago_mensalidade"));             
                regVetor.add(rsmensalidade.getFloat("juros_mensalidade"));             
                regVetor.add(rsmensalidade.getFloat("desconto_mensalidade"));             
                regVetor.add(rsmensalidade.getInt("mensalidade_formadepagamento"));             
                regVetor.add(rsmensalidade.getInt("mensalidade_status"));             
                regVetor.add(rsmensalidade.getInt("mensalidade_plano"));
                
                
                //regVetor.add(rsmensalidade.getString("nome_formadepagamento")); 
                
                   
               dados.add(regVetor);
               tablemodel.addRow(regVetor);
            }  
            tblMensalidade.setModel(tablemodel);
            
        } catch (SQLException ex) {
            Logger.getLogger(Psq_MensalidadeVIEW.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    public void ExcluirMensalidade()
    {
        MensalidadeCTR objusu = new MensalidadeCTR();
        
        int linha = tblMensalidade.getSelectedRow();
            
        objmensalidade.cod_mensalidade = (int) tblMensalidade.getValueAt(linha, 0);
        
        
        objusu.ExcluiMensalidadeCTR(objmensalidade.cod_mensalidade);
    }
    
    
       private static class RoundedBorder implements Border {
        
        private int radius;
        
        RoundedBorder(int radius) {
            this.radius = radius;
        }
        public Insets getBorderInsets(Component c) {
            return new Insets(this.radius+1, this.radius+1, this.radius+2, this.radius);
        }

        public boolean isBorderOpaque() {
            return true;
        }

        public void paintBorder(Component c, Graphics g, int x, int y, int width, int height) {
            g.drawRoundRect(x,y,width-1,height-1,radius,radius);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeletar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable tblMensalidade;
    private javax.swing.JTextField txtPesquisar;
    // End of variables declaration//GEN-END:variables

}
